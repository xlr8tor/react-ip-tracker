{"version":3,"sources":["Components/Header/Header.styles.js","Components/Header/Header.js","Components/Info/Info.styles.js","Components/Info/Info.js","images/icon-arrow.svg","Components/SearchBar/SearchBar.styles.js","Components/SearchBar/SearchBar.js","Components/Map/Map.js","images/pattern-bg.png","GlobalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Heading","h1","Header","text","Content","Section","section","Info","state","className","ip","location","timezone","isp","Button","button","arrow","SearchBar","onSubmit","useState","inputText","setInputText","type","placeholder","value","onChange","e","target","onClick","Map","coordinates","map","setMap","position","latitude","longitude","flyTo","MapContainer","center","zoom","style","width","height","zIndex","top","zoomControl","whenCreated","TileLayer","attribution","url","Marker","GlobalStyles","createGlobalStyle","Background","App","setState","setCoordinates","useEffect","BaseURL","getData","a","fetch","json","region","BASE_URI","process","result","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a117b01e.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  padding-top: 1.2em;\n  width: 100%;\n`;\n\nexport const Heading = styled.h1`\n  color: #fff;\n  font-weight: 500;\n  font-size: 1.5rem;\n`;\n","import { Wrapper, Heading } from \"./Header.styles\";\n\n\nconst Header = ({text}) => {\n    return (\n        <Wrapper>\n            <Heading>{text}</Heading>\n        </Wrapper>\n    )\n}\n\nexport default Header;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  position: absolute;\n  padding: 1.5em 1em;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  background: #fff;\n  width: 100%;\n  max-width: 1100px;\n  padding: 1.5em;\n  margin: 0 auto;\n  border-radius: 15px;\n  z-index: 4;\n\n  @media (min-width: 768px) {\n    flex-flow: row;\n    padding: 2em;\n\n    section {\n      width: 25%;\n      text-align: start;\n\n      p {\n        font-size: 1.4em;\n      }\n\n      h3 {\n        font-size: 14px;\n      }\n    }\n\n    section + section {\n      border-left: 1px solid var(--Dark-Gray);\n      padding: 1.5em;\n    }\n  }\n`;\n\nexport const Section = styled.section`\n  text-align: center;\n  width: 100%;\n\n  h3 {\n    font-size: 10px;\n    color: var(--Dark-Gray);\n    padding-block-end: 0.7em;\n  }\n\n  p {\n    font-size: 1em;\n    font-weight: 500;\n  }\n\n  .bottom {\n    padding-block-end: 1em;\n  }\n\n  & + & {\n    padding: 0;\n\n    @media (min-width: 425px) {\n      padding: 0 1.5em;\n    }\n  }\n\n  @media (min-width: 425px) and (max-width: 768px) {\n    p {\n      font-size: 1.3rem;\n    }\n  }\n`;\n","import { Content, Wrapper, Section } from \"./Info.styles\";\n\nconst Info = ({ state }) => {\n  return (\n    <Wrapper>\n      <Content>\n        <Section>\n          <h3>IP ADDRESS</h3>\n          <p className=\"bottom\"> {state.ip}</p>\n        </Section>\n        <Section>\n          <h3>LOCATION</h3>\n          <p className=\"bottom\"> {state.location} </p>\n        </Section>\n        <Section>\n          <h3>TIMEZONE</h3>\n          <p className=\"bottom\"> {state.timezone} </p>\n        </Section>\n        <Section>\n          <h3>ISP</h3>\n          <p> {state.isp} </p>\n        </Section>\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default Info;\n","export default __webpack_public_path__ + \"static/media/icon-arrow.2eaaa5ee.svg\";","import styled from \"styled-components\";\nimport arrow from \"./../../images/icon-arrow.svg\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  margin: 20px 0;\n  padding: 0 1em;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  margin: 0 auto;\n\n  input {\n    width: inherit;\n    outline: none;\n    border: none;\n    height: 55px;\n    padding: 0 60px 0 25px;\n    border-radius: 12px;\n    cursor: pointer;\n\n    :focus {\n      outline: none;\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  background: var(--Very-Dark-Gray);\n  color: #fff;\n  border: none;\n  height: 55px;\n  width: 60px;\n  right: 0;\n  cursor: pointer;\n  border-radius: 0 12px 12px 0;\n\n  ::before {\n    content: url(${arrow});\n  }\n  :hover {\n    background: hsl(0, 0%, 25%);\n  }\n`;\n","import { useState } from \"react\";\n\nimport { Wrapper, Content, Button } from \"./SearchBar.styles\";\n\n\n\nconst SearchBar = ({onSubmit}) => {\n    const [inputText, setInputText] = useState(\"\");\n\n    return (\n        <Wrapper>\n            <Content>\n                <input \n                    type=\"text\"\n                    placeholder=\"Enter IP Address\"\n                    value = {inputText}\n                    onChange = {(e) => {\n                        setInputText(e.target.value)\n                    }}\n                />\n                <Button \n                    onClick = {() => {\n                        //submit search term\n                        onSubmit(inputText)\n                    }}></Button>\n            </Content>\n        </Wrapper>\n    )\n}\n\nexport default SearchBar;","//Third party components\nimport { useState } from \"react\";\nimport { MapContainer, TileLayer, Marker } from \"react-leaflet\";\n\nconst Map = ({ coordinates }) => {\n  const [map, setMap] = useState(null);\n\n  const style = {\n    position: \"relative\",\n    width: \"inherit\",\n    height: \"100vh\",\n    zIndex: \"-1\",\n    top: \"87px\",\n  };\n\n  const position = [coordinates.latitude, coordinates.longitude];\n  if (map) {\n    map.flyTo(position);\n  }\n  return (\n    <MapContainer\n      center={position}\n      zoom={13}\n      style={style}\n      zoomControl={false}\n      whenCreated={setMap}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Marker position={position} className=\"marker\"></Marker>\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","export default __webpack_public_path__ + \"static/media/pattern-bg.a60a3c85.png\";","import { createGlobalStyle } from \"styled-components\";\nimport Background from \"./images/pattern-bg.png\";\n\nexport const GlobalStyles = createGlobalStyle`\n    :root {\n        --Very-Dark-Gray: hsl(0, 0%, 17%);\n        --Dark-Gray: hsl(0, 0%, 59%);\n        --Font-Size: 18px;\n        font-size: var(--Font-Size);\n    }\n\n    *,\n    ::before,\n    ::after {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n\n    html,\n    body {\n        height: 100%;\n        min-height: 100%;\n    }\n\n    body {\n        background: url(${Background}) no-repeat top center;\n        ${\"\" /* background-size: contain; */}\n        font-family: 'Rubik', sans-serif;\n        -webkit-font-smoothing: antialiased;\n\n        @media (min-width: 425px) {\n            overflow: hidden;\n            }\n    }\n\n    input {\n        font: inherit;\n    }\n\n    p,h1,h2,h3,h4,h5,h6 {\n        overflow-wrap: break-word;\n    }\n`;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\n//Components\nimport Header from \"./Components/Header/Header\";\nimport Info from \"./Components/Info/Info\";\nimport SearchBar from \"./Components/SearchBar/SearchBar\";\nimport Map from \"./Components/Map/Map\";\n\n//Styles\nimport { GlobalStyles } from \"./GlobalStyles\";\n\nfunction App() {\n  const [state, setState] = useState({\n    ip: \"\",\n    location: \"\",\n    timezone: \"\",\n    isp: \"\",\n  });\n\n  const [inputText, setInputText] = useState(\"\");\n  const [coordinates, setCoordinates] = useState({\n    latitude: \"\",\n    longitude: \"\",\n  });\n\n  useEffect(() => {\n    const BaseURL = `https://geo.ipify.org/api/v2/country?apiKey=at_1eOwaoyynv2OrKjDZSIHyo0VvVlnf&ipAddress=${inputText}`;\n    const getData = async (BaseURL) => {\n      const {\n        ip,\n        location: { region: location },\n        location: { timezone },\n        isp,\n      } = await (await fetch(BaseURL)).json();\n      setState({ ip, location, timezone, isp });\n      const BASE_URI = `https://api.ipgeolocation.io/ipgeo?apiKey=${process.env.REACT_APP_API_KEY}&ip=${ip}`;\n      const result = await (await fetch(BASE_URI)).json();\n      const { latitude, longitude } = result;\n      setCoordinates({ latitude, longitude });\n    };\n\n    getData(BaseURL);\n  }, [inputText]);\n\n  const submit = (text) => {\n    setInputText(text);\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Header text={\"IP Address Tracker\"} />\n        <SearchBar onSubmit={submit} />\n        <Info state={state} />\n      </div>\n\n      <Map coordinates={coordinates} />\n      <GlobalStyles />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}